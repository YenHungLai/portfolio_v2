.btn {
	text-transform: uppercase;
	text-decoration: none;
	letter-spacing: 2px;
	border-radius: 100px;
	/* Inline elements are treated as if they are texts */
	display: inline-block;
	/* 
        Two numbers: top bottom 
        Four numbers: top right bottom left
    */
	padding: 15px 40px;
	/* Default value. All properties will get a transition effect */
	transition: all 0.2s;
	position: relative;
	top: 5%;
	background: white;
	color: black !important;
	animation: moveInBottom 0.5s ease-out 0.75s;
	/* Specifies a style for the element when the animation is not playing (before it starts, after it ends, or both). */
    animation-fill-mode: backwards;
    outline: none;
	user-select: none;
	cursor: pointer;
}

/* 
    The pseudo-element must be a child of the element to which it is being applied.  
    The ::after selector inserts something after the content of each selected element(s).
    Here we're placing an exact same button behind the button.
*/
.btn::after {
	/* Used with the ::before and ::after pseudo-elements, to insert generated content. */
	content: '';
	display: inline-block;
	height: 100%;
	width: 100%;
	border-radius: 100px;
	position: absolute;
	top: 0;
	left: 0;
	z-index: -1;
	transition: all 0.4s;
	background: white;
}

/* When hovering the button it scales and becomes opaque */
.btn:hover::after {
	transform: scaleX(1.4) scaleY(1.6);
	opacity: 0;
}

@keyframes moveInBottom {
	0% {
		opacity: 0;
		transform: translateY(30px);
	}
	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

.btn:hover {
	/* Use negative values to move up */
	transform: translateY(-3px);
	/* box-shadow: none|h-offset v-offset blur spread color |inset|initial|inherit; */
	box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
	transform: translateY(-1px);
	box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}


/*# sourceMappingURL=/button.04c63ab4.css.map */