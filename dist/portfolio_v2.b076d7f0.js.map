{"version":3,"sources":["index.js"],"names":["isScrolling","container","document","querySelector","navAbout","navProjects","navContacts","about","projects","contacts","contactsText","languageIcons","querySelectorAll","topNav","description","gallery","galleryMobile","icons","window","addEventListener","clearTimeout","style","transform","scrollRatio","scrollY","scrollHeight","color","forEach","item","display","opacity","setTimeout","icon","classList","add","remove","getRandInteger","min","max","Math","floor","random","descriptionPos","getBoundingClientRect"],"mappings":";AAIA,IAgBIA,EAhBEC,EAAYC,SAASC,cAAc,cACnCC,EAAWF,SAASC,cAAc,iCAClCE,EAAcH,SAASC,cAAc,iCACrCG,EAAcJ,SAASC,cAAc,iCACrCI,EAAQL,SAASC,cAAc,0BAC/BK,EAAWN,SAASC,cAAc,6BAClCM,EAAWP,SAASC,cAAc,6BAClCO,EAAeR,SAASC,cAAc,iBACtCQ,EAAgBT,SAASU,iBAAiB,8BAC1CC,EAASX,SAASC,cAAc,YAEhCW,EAAcZ,SAASC,cAAc,uBACrCY,EAAUb,SAASC,cAAc,YACjCa,EAAgBd,SAASC,cAAc,mBACvCc,EAAQf,SAASC,cAAc,iBAIrCe,OAAOC,iBAAiB,SAAU,WACjCD,OAAOE,aAAapB,GACpBa,EAAOQ,MAAMC,UAAY,gBAGnBC,IAAAA,EAAcL,OAAOM,QAAUvB,EAAUwB,aAG3CF,GAAe,KAClBjB,EAAYe,MAAMK,MAAQ,UACzBrB,CAAAA,EAAaD,GAAUuB,QAAQ,SAAAC,GAASA,OAAAA,EAAKP,MAAMK,MAAQ,UAE5DhB,EAAaW,MAAMQ,QAAU,SACnBN,GAAe,KACzBlB,EAAYgB,MAAMK,MAAQ,UACzBtB,CAAAA,EAAUE,GAAaqB,QAAQ,SAAAC,GAASA,OAAAA,EAAKP,MAAMK,MAAQ,UAC5DX,EAAQM,MAAMS,QAAU,EACxBf,EAAQM,MAAMC,UAAY,gBAC1BN,EAAcK,MAAMS,QAAU,EAC9Bd,EAAcK,MAAMC,UAAY,iBACtBC,GAAe,KACzBnB,EAASiB,MAAMK,MAAQ,UACtBrB,CAAAA,EAAaC,GAAaqB,QAAQ,SAAAC,GAASA,OAAAA,EAAKP,MAAMK,MAAQ,UAG/DZ,EAAYO,MAAMS,QAAU,EAC5BhB,EAAYO,MAAMC,UAAY,gBAC9BL,EAAMI,MAAMS,QAAU,EACtBb,EAAMI,MAAMC,UAAY,kBAEvBlB,CAAAA,EAAUC,EAAaC,GAAaqB,QAAQ,SAAAC,GAASA,OAAAA,EAAKP,MAAMK,MAAQ,UAIzEX,EAAQM,MAAMS,QAAU,EACxBf,EAAQM,MAAMC,UAAY,oBAC1BN,EAAcK,MAAMS,QAAU,EAC9Bd,EAAcK,MAAMC,UAAY,oBAChCR,EAAYO,MAAMS,QAAU,EAC5BhB,EAAYO,MAAMC,UAAY,oBAC9BL,EAAMI,MAAMS,QAAU,EACtBb,EAAMI,MAAMC,UAAY,oBACxBZ,EAAaW,MAAMQ,QAAU,QAG1BN,GAAe,qBAClBvB,EAAc+B,WAAW,WAExBlB,EAAOQ,MAAMC,UAAY,qBACvB,QAMLX,EAAcgB,QAAQ,SAAAK,GACrBA,EAAKb,iBAAiB,YAAa,WAClCa,EAAKC,UAAUC,IAAI,WAAY,eAEhCF,EAAKb,iBAAiB,WAAY,WACjCa,EAAKC,UAAUE,OAAO,WAAY,iBAIpC,IAAMC,EAAiB,SAACC,EAAKC,GAAQC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,GAGzEK,EAAiB5B,EAAY6B","file":"portfolio_v2.b076d7f0.js","sourceRoot":"..","sourcesContent":["/**\r\n * TODO:\r\n * - Project section, add source code and demo buttons, technologies used tags\r\n */\r\nconst container = document.querySelector('.container');\r\nconst navAbout = document.querySelector('.top-nav a[href=\"#section-1\"]');\r\nconst navProjects = document.querySelector('.top-nav a[href=\"#section-2\"]');\r\nconst navContacts = document.querySelector('.top-nav a[href=\"#section-3\"]');\r\nconst about = document.querySelector('section[class=\"about\"]');\r\nconst projects = document.querySelector('section[class=\"projects\"]');\r\nconst contacts = document.querySelector('section[class=\"contacts\"]');\r\nconst contactsText = document.querySelector('.contacts div');\r\nconst languageIcons = document.querySelectorAll('.about i[class^=\"devicon\"]');\r\nconst topNav = document.querySelector('.top-nav');\r\n// const diagram = document.querySelector('.diagram');\r\nconst description = document.querySelector('.about .description');\r\nconst gallery = document.querySelector('.gallery');\r\nconst galleryMobile = document.querySelector('.gallery-mobile');\r\nconst icons = document.querySelector('.about .icons');\r\n\r\nlet isScrolling;\r\n// Highlight current section and auto hide navbar\r\nwindow.addEventListener('scroll', () => {\r\n\twindow.clearTimeout(isScrolling);\r\n\ttopNav.style.transform = 'translateY(0)';\r\n\r\n\t// Use ratio so it works the same for all viewport size\r\n\tconst scrollRatio = window.scrollY / container.scrollHeight;\r\n\t// console.log(scrollRatio);\r\n\r\n\tif (scrollRatio >= 0.71) {\r\n\t\tnavContacts.style.color = '#ff3f74';\r\n\t\t[navProjects, navAbout].forEach(item => (item.style.color = 'white'));\r\n\t\t// To show animation\r\n\t\tcontactsText.style.display = 'block';\r\n\t} else if (scrollRatio >= 0.45) {\r\n\t\tnavProjects.style.color = '#ff3f74';\r\n\t\t[navAbout, navContacts].forEach(item => (item.style.color = 'white'));\r\n\t\tgallery.style.opacity = 1;\r\n\t\tgallery.style.transform = 'translateY(0)';\r\n\t\tgalleryMobile.style.opacity = 1;\r\n\t\tgalleryMobile.style.transform = 'translateY(0)';\r\n\t} else if (scrollRatio >= 0.19) {\r\n\t\tnavAbout.style.color = '#ff3f74';\r\n\t\t[navProjects, navContacts].forEach(item => (item.style.color = 'white'));\r\n\t\t// diagram.style.opacity = 1;\r\n\t\t// diagram.style.transform = 'translateY(0)';\r\n\t\tdescription.style.opacity = 1;\r\n\t\tdescription.style.transform = 'translateY(0)';\r\n\t\ticons.style.opacity = 1;\r\n\t\ticons.style.transform = 'translateY(0)';\r\n\t} else {\r\n\t\t[navAbout, navProjects, navContacts].forEach(item => (item.style.color = 'white'));\r\n\t\t// Reset values for transition\r\n\t\t// diagram.style.opacity = 0;\r\n\t\t// diagram.style.transform = 'translateY(100px)';\r\n\t\tgallery.style.opacity = 0;\r\n\t\tgallery.style.transform = 'translateY(100px)';\r\n\t\tgalleryMobile.style.opacity = 0;\r\n\t\tgalleryMobile.style.transform = 'translateY(100px)';\r\n\t\tdescription.style.opacity = 0;\r\n\t\tdescription.style.transform = 'translateY(100px)';\r\n\t\ticons.style.opacity = 0;\r\n\t\ticons.style.transform = 'translateY(100px)';\r\n\t\tcontactsText.style.display = 'none';\r\n\t}\r\n\r\n\tif (scrollRatio >= 0.24734177215189873) {\r\n\t\tisScrolling = setTimeout(() => {\r\n\t\t\t// console.log('not scrolling');\r\n\t\t\ttopNav.style.transform = 'translateY(-50px)';\r\n\t\t}, 1000);\r\n\t}\r\n});\r\n\r\n// Icon hover animation\r\n// FIXME: stopped working after putting inside div\r\nlanguageIcons.forEach(icon => {\r\n\ticon.addEventListener('mouseover', () => {\r\n\t\ticon.classList.add('animated', 'heartBeat');\r\n\t});\r\n\ticon.addEventListener('mouseout', () => {\r\n\t\ticon.classList.remove('animated', 'heartBeat');\r\n\t});\r\n});\r\n\r\nconst getRandInteger = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\r\n// Icons randomly float effect.\r\nconst descriptionPos = description.getBoundingClientRect();\r\n\r\n// const moveIcon = icon => {\r\n// \tconst leftVal = getRandInteger(50, about.clientWidth - 147);\r\n// \tconst topVal = getRandInteger(50, about.clientHeight - 0);\r\n// \tif (leftVal < descriptionPos.left || leftVal > descriptionPos.right)\r\n// \t\ticon.style.left = leftVal + 'px';\r\n// \tif (topVal < descriptionPos.top || topVal > descriptionPos.bottom)\r\n// \t\ticon.style.top = topVal + 'px';\r\n// \tconst val = getRandInteger(10, 15);\r\n// \ticon.style.transitionDuration = val + 's';\r\n// \tsetTimeout(moveIcon.bind(this, icon), val * 1000);\r\n// };\r\n\r\n// icons.forEach(icon => moveIcon(icon));\r\n"]}